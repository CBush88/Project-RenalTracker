@model RenalTracker.ViewModel.FoodViewModel
@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<dl class="row">
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.BrandedFood.First().BrandOwner)
    </dt>
    <dt class="col-sm-10">
        @Html.DisplayFor(model => model.BrandedFood.First().BrandOwner)
    </dt>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.Food.First().Description)
    </dt>
    <dt class="col-sm-10">
        @Html.DisplayFor(model => model.Food.First().Description)
    </dt>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.BrandedFood.First().ServingSize)
    </dt>
    <dt class="col-sm-10">
        @Html.DisplayFor(model => model.BrandedFood.First().HouseholdServingFulltext)
        <span>,</span>
        @Html.DisplayFor(model => model.BrandedFood.First().ServingSize)
        @Html.DisplayFor(model => model.BrandedFood.First().ServingSizeUnit)
    </dt>
    <dt class="col-sm-2">
        Nutrients:
    </dt>
    <dt class="col-sm-10">
        @for (int i = 0; i < Model.FoodNutrient?.Count(); i++)
        {
            int protein = 1003;
            int fat = 1004;
            int carbohydrate = 1005;
            int calorie = 1008;
            int phosphorus = 1091;
            int potassium = 1092;
            int sodium = 1093;
            //if no calories listed, calculate them.
            if(Model.FoodNutrient.Where(i => i.NutrientId == calorie).Count() == 0)
            {
                
                double numProteinAndCarbs = Model.FoodNutrient.Where(i => i.NutrientId == protein || i.NutrientId == carbohydrate).Sum(i => i.Amount);
                double numFat = Model.FoodNutrient.Where(i => i.NutrientId == fat).First().Amount;
                Model.FoodNutrient = Model.FoodNutrient.Append<FoodNutrient>(new FoodNutrient { NutrientId = (short)calorie, Amount = double.Truncate((4 * numProteinAndCarbs + 9 * numFat)) });
                Model.FoodNutrient = Model.FoodNutrient.OrderBy(i => i.NutrientId);
            }
            //If Phosphorus, Potassium, or Sodium and not low amounts, display in red text
            int nutrientId = Model.FoodNutrient.ElementAt(i).NutrientId;
            double amount = Model.FoodNutrient.ElementAt(i).Amount;
            @if (nutrientId == phosphorus || (nutrientId == potassium && amount > 200) || (nutrientId == sodium && amount > 240))
            {
                <span class="text-danger">
                    @Html.DisplayFor(model => model.Nutrient!.Where(i => i.Id == nutrientId).First().Name)
                    <span>&nbsp;</span>
                    @Html.DisplayFor(model => model.FoodNutrient!.ElementAt(i).Amount)
                    @Html.DisplayFor(model => model.Nutrient!.Where(i => i.Id == nutrientId).First().UnitName)
                    <br />
                </span>
            }
            else
            {
                <span>
                    @Html.DisplayFor(model => model.Nutrient!.Where(item => item.Id == nutrientId).First().Name)
                    <span>&nbsp;</span>
                    @Html.DisplayFor(model => model.FoodNutrient!.ElementAt(i).Amount)
                    @Html.DisplayFor(model => model.Nutrient!.Where(i => i.Id == nutrientId).First().UnitName)
                    <br />
                </span>
            }
        }
    </dt>
    <dt class="col-sm-2">
        @Html.DisplayNameFor(model => model.BrandedFood.First().Ingredients)
    </dt>
    <dt class="col-sm10 fst-italic">
        @Html.DisplayFor(model => model.BrandedFood.First().Ingredients)
    </dt>
</dl>

<form>
    <input type="hidden" name="fdcId" id="fdcId" value="@Model.Food.First().FdcId"/>
    <label for="Servings">Servings: </label>
    <input type="text" name="servings" id="servings"  />
    <br />
    <label for="date">Date: </label>
    <input type="date" name="date" id="date" value=@DateTime.Now.Date />
    <br />
</form>

<button onclick="add(@Model.Food.First().FdcId)">Add</button>

<script>
    function add() {
        let fdcId = document.getElementById("fdcId").value
        let servings = document.getElementById("servings").value
        let date = document.getElementById("date").value

        location.replace(`/meal/create?FdcId=${fdcId}&Servings=${servings}&Date=${date}`);
        //sessionStorage.setItem("FdcId", id.toString());
        //sessionStorage.setItem("Servings", )
    }
</script>

